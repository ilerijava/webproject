<beans:beans xmlns="http://www.springframework.org/schema/security"
	xmlns:beans="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/beans 
                    http://www.springframework.org/schema/beans/spring-beans-3.1.xsd
                    http://www.springframework.org/schema/security 
                    http://www.springframework.org/schema/security/spring-security-3.1.xsd">


	<!-- <http use-expressions="true"> -->
	<!-- <intercept-url pattern="/pages/unsecure/login.xhtml" -->
	<!-- access="permitAll" /> -->
	<!-- <form-login login-processing-url="/j_spring_security_check" -->
	<!-- login-page="/pages/unsecure/login.xhtml?faces-redirect=true" -->
	<!-- default-target-url="/pages/secure/index.xhtml" -->
	<!-- authentication-failure-url="/pages/unsecure/login.xhtml?faces-redirect=true?error" 
		/> -->
	<!-- <logout invalidate-session="true" -->
	<!-- logout-success-url="/pages/unsecure/login.xhtml?faces-redirect=true?logout" 
		/> -->
	<!-- </http> -->

	<global-method-security pre-post-annotations="enabled" />
	<http auto-config="true" use-expressions="true">

		<!-- Page level Spring Security : Intercept access to resources in /pages/secure/** -->
		<intercept-url pattern="/pages/secure/**" access="hasRole('ROL_ADMIN')" />

		<!-- Page level Spring Security : Permit access to resources in /pages/unsecure/** -->
		<intercept-url pattern="/pages/unsecure/**" access="permitAll" />

		<!-- Page level Spring Security : Intercept access to resources in /** -->
		<intercept-url pattern="/**" access="hasRole('ROL_ADMIN')" />

		<!-- Page level Spring Security : Enable Primefaces -->
		<intercept-url pattern="/resources/**" access="permitAll" />

		<!-- Define login page for Spring Security -->
		<form-login login-page="/pages/unsecure/login.xhtml" />

		<!-- Define logout properties for Spring Security -->
		<logout invalidate-session="true" delete-cookies="true"
			logout-success-url="/"></logout>
	</http>

	<beans:bean id="daoAuthenticationProvider"
		class="org.springframework.security.authentication.dao.DaoAuthenticationProvider">
		<beans:property name="userDetailsService" ref="userDetailsService"></beans:property>
	</beans:bean>

	<beans:bean id="authenticationManager"
		class="org.springframework.security.authentication.ProviderManager">
		<beans:property name="providers">
			<beans:list>
				<beans:ref local="daoAuthenticationProvider" />
			</beans:list>
		</beans:property>
	</beans:bean>

	<authentication-manager alias="authenticationManager">
		<authentication-provider user-service-ref="userDetailsService">
			<password-encoder hash="plaintext"></password-encoder>
		</authentication-provider>
	</authentication-manager>

	<!-- Inject authentication Manager to our LoginBean -->
	<beans:bean id="loginView" name="loginView" class="com.tutev.bean.LoginBean"
		scope="prototype">
		<beans:property name="authenticationManager" ref="authenticationManager"></beans:property>
	</beans:bean>
</beans:beans>